
xdpsock_kern.o:	file format ELF64-BPF

Disassembly of section xdp_sock:
xdp_sock_prog:
; {
       0:	bf 17 00 00 00 00 00 00 	r7 = r1
       1:	b7 06 00 00 00 00 00 00 	r6 = 0
; int *qidconf, key = 0, idx;
       2:	63 6a fc ff 00 00 00 00 	*(u32 *)(r10 - 4) = r6
       3:	bf a2 00 00 00 00 00 00 	r2 = r10
; int xdp_sock_prog(struct xdp_md *ctx)
       4:	07 02 00 00 fc ff ff ff 	r2 += -4
; qidconf = bpf_map_lookup_elem(&qidconf_map, &key);
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00 	call 1
; if (!qidconf)
       8:	15 00 0a 00 00 00 00 00 	if r0 == 0 goto +10 <LBB0_3>
       9:	b7 06 00 00 02 00 00 00 	r6 = 2
; if (*qidconf != ctx->rx_queue_index)
      10:	61 71 10 00 00 00 00 00 	r1 = *(u32 *)(r7 + 16)
      11:	61 02 00 00 00 00 00 00 	r2 = *(u32 *)(r0 + 0)
      12:	5d 12 06 00 00 00 00 00 	if r2 != r1 goto +6 <LBB0_3>
; return bpf_redirect_map(&xsks_map, idx, 0);
      13:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 	r1 = 0 ll
      15:	b7 02 00 00 00 00 00 00 	r2 = 0
      16:	b7 03 00 00 00 00 00 00 	r3 = 0
      17:	85 00 00 00 33 00 00 00 	call 51
      18:	bf 06 00 00 00 00 00 00 	r6 = r0

LBB0_3:
; }
      19:	bf 60 00 00 00 00 00 00 	r0 = r6
      20:	95 00 00 00 00 00 00 00 	exit
