Disassembly of section xdp_redirect_map:
xdp_redirect_map_prog:
       0:       61 13 04 00 00 00 00 00         r3 = *(u32 *)(r1 + 4)
       1:       61 12 00 00 00 00 00 00         r2 = *(u32 *)(r1 + 0)
       2:       b7 04 00 00 00 00 00 00         r4 = 0
       3:       63 4a fc ff 00 00 00 00         *(u32 *)(r10 - 4) = r4
       4:       7b 4a f0 ff 00 00 00 00         *(u64 *)(r10 - 16) = r4
       5:       7b 4a e8 ff 00 00 00 00         *(u64 *)(r10 - 24) = r4
       6:       b7 06 00 00 01 00 00 00         r6 = 1
       7:       bf 24 00 00 00 00 00 00         r4 = r2
       8:       07 04 00 00 0e 00 00 00         r4 += 14
       9:       2d 34 3c 00 00 00 00 00         if r4 > r3 goto +60 <LBB0_17>
      10:       71 24 0c 00 00 00 00 00         r4 = *(u8 *)(r2 + 12)
      11:       71 25 0d 00 00 00 00 00         r5 = *(u8 *)(r2 + 13)
      12:       67 05 00 00 08 00 00 00         r5 <<= 8
      13:       4f 45 00 00 00 00 00 00         r5 |= r4
      14:       55 05 37 00 08 00 00 00         if r5 != 8 goto +55 <LBB0_17>
      15:       bf 24 00 00 00 00 00 00         r4 = r2
      16:       07 04 00 00 22 00 00 00         r4 += 34
      17:       2d 34 34 00 00 00 00 00         if r4 > r3 goto +52 <LBB0_17>
      18:       61 17 0c 00 00 00 00 00         r7 = *(u32 *)(r1 + 12)
      19:       71 21 17 00 00 00 00 00         r1 = *(u8 *)(r2 + 23)
      20:       15 01 01 00 11 00 00 00         if r1 == 17 goto +1 <LBB0_5>
      21:       55 01 30 00 06 00 00 00         if r1 != 6 goto +48 <LBB0_17>
LBB0_5:
      22:       bf 24 00 00 00 00 00 00         r4 = r2
      23:       07 04 00 00 2a 00 00 00         r4 += 42
      24:       2d 34 2d 00 00 00 00 00         if r4 > r3 goto +45 <LBB0_17>
      25:       6b 1a e8 ff 00 00 00 00         *(u16 *)(r10 - 24) = r1
      26:       61 23 1a 00 00 00 00 00         r3 = *(u32 *)(r2 + 26)
      27:       63 3a f0 ff 00 00 00 00         *(u32 *)(r10 - 16) = r3
      28:       61 24 1e 00 00 00 00 00         r4 = *(u32 *)(r2 + 30)
      29:       63 4a f4 ff 00 00 00 00         *(u32 *)(r10 - 12) = r4
      30:       69 21 22 00 00 00 00 00         r1 = *(u16 *)(r2 + 34)
      31:       6b 1a ea ff 00 00 00 00         *(u16 *)(r10 - 22) = r1
      32:       69 22 24 00 00 00 00 00         r2 = *(u16 *)(r2 + 36)
      33:       6b 2a ec ff 00 00 00 00         *(u16 *)(r10 - 20) = r2
      34:       3d 34 02 00 00 00 00 00         if r4 >= r3 goto +2 <LBB0_8>
      35:       63 3a f4 ff 00 00 00 00         *(u32 *)(r10 - 12) = r3
      36:       63 4a f0 ff 00 00 00 00         *(u32 *)(r10 - 16) = r4
LBB0_8:
      37:       3d 12 02 00 00 00 00 00         if r2 >= r1 goto +2 <LBB0_10>
      38:       6b 1a ec ff 00 00 00 00         *(u16 *)(r10 - 20) = r1
      39:       6b 2a ea ff 00 00 00 00         *(u16 *)(r10 - 22) = r2
LBB0_10:
      40:       bf a2 00 00 00 00 00 00         r2 = r10
      41:       07 02 00 00 e8 ff ff ff         r2 += -24
      42:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00         r1 = 0 ll
      44:       85 00 00 00 01 00 00 00         call 1
      45:       55 07 05 00 05 00 00 00         if r7 != 5 goto +5 <LBB0_13>
      46:       15 00 17 00 00 00 00 00         if r0 == 0 goto +23 <LBB0_17>
      47:       71 02 00 00 00 00 00 00         r2 = *(u8 *)(r0 + 0)
      48:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00         r1 = 0 ll
      50:       05 00 10 00 00 00 00 00         goto +16 <LBB0_16>
LBB0_13:
      51:       55 00 0c 00 00 00 00 00         if r0 != 0 goto +12 <LBB0_15>
      52:       b7 01 00 00 04 00 00 00         r1 = 4
      53:       73 1a fc ff 00 00 00 00         *(u8 *)(r10 - 4) = r1
      54:       b7 01 00 00 05 00 00 00         r1 = 5
      55:       6b 1a fe ff 00 00 00 00         *(u16 *)(r10 - 2) = r1
      56:       bf a2 00 00 00 00 00 00         r2 = r10
      57:       07 02 00 00 e8 ff ff ff         r2 += -24
      58:       bf a3 00 00 00 00 00 00         r3 = r10
      59:       07 03 00 00 fc ff ff ff         r3 += -4
      60:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00         r1 = 0 ll
      62:       b7 04 00 00 00 00 00 00         r4 = 0
      63:       85 00 00 00 02 00 00 00         call 2
LBB0_15:
      64:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00         r1 = 0 ll
      66:       b7 02 00 00 05 00 00 00         r2 = 5
LBB0_16:
      67:       b7 03 00 00 00 00 00 00         r3 = 0
      68:       85 00 00 00 33 00 00 00         call 51
      69:       bf 06 00 00 00 00 00 00         r6 = r0
LBB0_17:
      70:       bf 60 00 00 00 00 00 00         r0 = r6
      71:       95 00 00 00 00 00 00 00         exit